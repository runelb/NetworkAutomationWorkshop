---
- name: Deploy HAproxy
  hosts: devhaproxy
  gather_facts: no
  become: yes
  tags: haproxy
  tasks:
    - name: Install HAproxy
      package:
        name: haproxy
        state: present

    - name: Copy HAproxy configuration
      copy:
        src: haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg

- name: Deploy NginX and PHP
  hosts: webservers
  gather_facts: no
  become: yes
  tags: webservers
  tasks:
    - name: Install NginX
      package:
        name: nginx
        state: present

    - name: Start NginX
      service:
        name: nginx
        state: started
        enabled: yes
    
    - name: Install PHP-fpm
      package:
        name: php7.4-fpm
        state: present
      
    - name: Start PHP
      service:
        name: php7.4-fpm
        state: started
        enabled: yes

    - name: Copy NginX site configuration
      copy:
        src: nginx.conf
        dest: /etc/nginx/sites-enabled/default

    - name: Copy PHP application
      copy:
        src: index.php
        dest: /var/www/html/index.php

    # restart PHP before nginx, could cause a problem otherwise
    - name: Restart PHP
      service:
        name: php7.4-fpm
        state: restarted
    
    - name: Restart NginX server
      service:
        name: nginx
        state: restarted

    # likely not necessary, wait time is probably very quick
    - name: Wait for server to start
      wait_for:
        port: 80

# testing
- name: Finding the IP of devHAproxy for testing
  hosts: devhaproxy   # devhaproxy or bastion sends a request to public IP of devhaproxy
  gather_facts: yes
  become: yes
  tags: testing
  tasks:
    - name: Identify public IP of devHAproxy (Ansible goes trhough the bastion, and only knows devHAproxy's private IP address)
      uri:
        url: https://api.ipify.org?format=json
        return_content: yes
      register: ip_response
    
    - name: Print IP
      debug:
        msg: "{{ ip_response.json.ip }}"
    
    - name: Store IP address
      set_fact:
        devhaproxy_ip: "{{ ip_response.json.ip }}"

- name: Testing
  hosts: localhost
  gather_facts: yes
  tags: testing
  tasks:
    - name: Print devHAproxy's IP, but on localhost this time
      debug: var=hostvars['devhaproxy']['devhaproxy_ip']
        
    - name: Save devHAproxy's public IP address on localhost
      # # quote filter to avoid injection, devhaproxy's ip comes from outside
      shell: echo {{ hostvars['devhaproxy']['devhaproxy_ip'] | quote }}
      register: devhaproxy_ip

    - name: Double check the devhaproxy_ip variable is a valid IPv4 address
      debug:
        msg: "{{ devhaproxy_ip.stdout }}  Looks like an IP address, not a shell command"
      when:
        - devhaproxy_ip.stdout.split(".") | length == 4
        - devhaproxy_ip.stdout.split(".")[0] | int < 256
        - devhaproxy_ip.stdout.split(".")[1] | int < 256
        - devhaproxy_ip.stdout.split(".")[2] | int < 256
        - devhaproxy_ip.stdout.split(".")[3] | int < 256

    # - name: Ping request
    #   # # quote filter to avoid injection, devhaproxy's ip comes from outside
    #   shell: ping -c 4 {{ devhaproxy_ip.stdout | quote }}
    #   register: ping_out
    
    # - name: result
    #   debug: msg="{{ ping_out.stdout_lines }}"

    - name: First GET request
      # # quote filter to avoid injection, devhaproxy's ip comes from outside
      shell: curl {{ devhaproxy_ip.stdout | quote }}
      args:
        warn: no

    - name: Second GET request
      # # quote filter to avoid injection, devhaproxy's ip comes from outside
      shell: curl {{ devhaproxy_ip.stdout | quote }}
      args:
        warn: no

    - name: Third GET request
      # # quote filter to avoid injection, devhaproxy's ip comes from outside
      shell: curl {{ devhaproxy_ip.stdout | quote }}
      args:
        warn: no
